version: '3'

services:
  nginx:
    build:
      context: requirements/nginx/
      dockerfile: Dockerfile
      args:
          SSL_CERTIFICATE: ${SSL_CERTIFICATE}
          SSL_CERTIFICATE_KEY: ${SSL_CERTIFICATE_KEY}
          DOMAIN: ${DOMAIN}
          WDOMAIN: ${WDOMAIN}
          ROOT: ${ROOT}
          SSLPORT : ${SSLPORT}
    container_name: nginx
    depends_on:
      - wordpress
    ports:
      - "443:443"
    networks:
      - inception
    volumes:
      - wp-volume:${ROOT}
    env_file:
      - .env
    restart: on-failure

  mariadb:
    build:
      context: requirements/mariadb/
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        DB_ROOT: ${DB_ROOT}
        DBPORT : ${DBPORT}
        ROOT: ${ROOT}
        DBVOLUME : ${DBVOLUME}
    container_name: mariadb
    networks:
      - inception
    volumes:
      - db-volume:${DBVOLUME}
    env_file:
      - .env
    restart: on-failure

  wordpress:
    build:
      context: requirements/wordpress/
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASS: ${DB_PASS}
        WPORT : ${WPORT}
        ROOT: ${ROOT}
        PHPUSER : ${PHPUSER}
        AUTHOR_EMAIL : ${AUTHOR_EMAIL}
        ADMIN_EMAIL : ${ADMIN_EMAIL}
    container_name: wordpress
    depends_on:
      - mariadb
    networks:
      - inception
    volumes:
      - wp-volume:${ROOT}
    env_file:
      - .env  
    restart: on-failure

volumes:
  wp-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/$USER/data/wordpress

  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/$USER/data/mariadb

networks:
    inception:
        driver: bridge